# Azure Cosmos DB MCP Toolkit - Environment Variables Template
# Copy this file to .env and fill in your actual values

# ============================================================================
# FOR DOCKER COMPOSE LOCAL DEVELOPMENT
# ============================================================================
# The Cosmos DB emulator is automatically configured in docker-compose.yml
# You only need to set the Azure OpenAI variables below for vector search

# Required: Azure OpenAI service endpoint  
# Example: https://your-openai-service.openai.azure.com/
OPENAI_ENDPOINT=

# Required: Azure OpenAI embedding deployment name
# Example: text-embedding-ada-002, text-embedding-3-small, etc.
OPENAI_EMBEDDING_DEPLOYMENT=

# ============================================================================
# FOR PRODUCTION OR AZURE COSMOS DB (not emulator)
# ============================================================================
# Uncomment and set this if you want to use a real Azure Cosmos DB instead of emulator
# COSMOS_ENDPOINT=https://your-cosmosdb-account.documents.azure.com:443/

# ============================================================================
# OPTIONAL CONFIGURATION
# ============================================================================
# Optional: Application environment (Development, Staging, Production)
ASPNETCORE_ENVIRONMENT=Development

# Optional: Logging level (Debug, Information, Warning, Error)
ASPNETCORE_LOGGING__LOGLEVEL__DEFAULT=Information

# Optional: Server URLs (default: http://+:8080)
ASPNETCORE_URLS=http://+:8080

# ============================================================================
# DOCKER COMPOSE NOTES
# ============================================================================
# - Cosmos DB emulator runs at: https://localhost:8081 (from host)
# - Cosmos DB emulator runs at: https://cosmos-emulator:8081 (from container)
# - MCP Toolkit runs at: http://localhost:8080
# - Default emulator key is included in docker-compose.yml for convenience
# - Vector search requires Azure OpenAI (emulator doesn't support embeddings)