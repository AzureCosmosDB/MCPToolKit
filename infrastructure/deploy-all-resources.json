{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.37.4.10188",
      "templateHash": "7135957668334360856"
    }
  },
  "parameters": {
    "resourcePrefix": {
      "type": "string",
      "defaultValue": "mcp-toolkit",
      "metadata": {
        "description": "Prefix for all resource names"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "cosmosEndpoint": {
      "type": "string",
      "metadata": {
        "description": "Cosmos DB endpoint (external resource)"
      }
    },
    "aifProjectEndpoint": {
      "type": "string",
      "metadata": {
        "description": "AI Foundry project endpoint (recommended) or legacy Azure OpenAI endpoint. Example: https://my-project.eastus.api.azureml.ms/ or https://my-openai.openai.azure.com/"
      }
    },
    "embeddingDeploymentName": {
      "type": "string",
      "metadata": {
        "description": "Embedding model deployment name in AI Foundry project or Azure OpenAI. Example: text-embedding-3-small or text-embedding-ada-002"
      }
    },
    "containerAppName": {
      "type": "string",
      "defaultValue": "[format('{0}-app', parameters('resourcePrefix'))]",
      "metadata": {
        "description": "Container app name"
      }
    },
    "containerRegistryName": {
      "type": "string",
      "defaultValue": "[format('{0}acr{1}', replace(parameters('resourcePrefix'), '-', ''), uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Container registry name"
      }
    }
  },
  "variables": {
    "managedIdentityName": "[format('{0}-identity', parameters('containerAppName'))]",
    "containerAppEnvName": "[format('{0}-env', parameters('resourcePrefix'))]",
    "commonTags": {
      "Environment": "Production",
      "Application": "MCP-Toolkit"
    },
    "acrPullRoleId": "7f951dda-4ed3-4680-a7ca-43fe172d538d"
  },
  "resources": [
    {
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2023-07-01",
      "name": "[parameters('containerRegistryName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Basic"
      },
      "properties": {
        "adminUserEnabled": true
      },
      "tags": "[variables('commonTags')]"
    },
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2023-01-31",
      "name": "[variables('managedIdentityName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('commonTags')]"
    },
    {
      "type": "Microsoft.App/managedEnvironments",
      "apiVersion": "2024-03-01",
      "name": "[variables('containerAppEnvName')]",
      "location": "[parameters('location')]",
      "properties": {
        "zoneRedundant": false
      },
      "tags": "[variables('commonTags')]"
    },
    {
      "type": "Microsoft.App/containerApps",
      "apiVersion": "2024-03-01",
      "name": "[parameters('containerAppName')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName')))]": {}
        }
      },
      "properties": {
        "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments', variables('containerAppEnvName'))]",
        "configuration": {
          "ingress": {
            "external": true,
            "targetPort": 8080,
            "transport": "http",
            "allowInsecure": false,
            "traffic": [
              {
                "weight": 100,
                "latestRevision": true
              }
            ]
          },
          "secrets": [],
          "activeRevisionsMode": "Single"
        },
        "template": {
          "containers": [
            {
              "image": "mcr.microsoft.com/azuredocs/containerapps-helloworld:latest",
              "name": "[parameters('containerAppName')]",
              "env": [
                {
                  "name": "COSMOS_ENDPOINT",
                  "value": "[parameters('cosmosEndpoint')]"
                },
                {
                  "name": "OPENAI_ENDPOINT",
                  "value": "[parameters('aifProjectEndpoint')]"
                },
                {
                  "name": "OPENAI_EMBEDDING_DEPLOYMENT",
                  "value": "[parameters('embeddingDeploymentName')]"
                },
                {
                  "name": "ASPNETCORE_ENVIRONMENT",
                  "value": "Production"
                },
                {
                  "name": "ASPNETCORE_URLS",
                  "value": "http://+:8080"
                }
              ],
              "resources": {
                "cpu": "[json('0.5')]",
                "memory": "1Gi"
              },
              "probes": [
                {
                  "type": "Readiness",
                  "httpGet": {
                    "path": "/health",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 10,
                  "periodSeconds": 10,
                  "timeoutSeconds": 5,
                  "successThreshold": 1,
                  "failureThreshold": 3
                },
                {
                  "type": "Liveness",
                  "httpGet": {
                    "path": "/health",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 30,
                  "periodSeconds": 30,
                  "timeoutSeconds": 5,
                  "successThreshold": 1,
                  "failureThreshold": 3
                }
              ]
            }
          ],
          "scale": {
            "minReplicas": 1,
            "maxReplicas": 3,
            "rules": [
              {
                "name": "http-requests",
                "http": {
                  "metadata": {
                    "concurrentRequests": "10"
                  }
                }
              }
            ]
          }
        }
      },
      "tags": "[variables('commonTags')]",
      "dependsOn": [
        "[resourceId('Microsoft.App/managedEnvironments', variables('containerAppEnvName'))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', parameters('containerRegistryName'))]",
      "name": "[guid(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName')), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName')), variables('acrPullRoleId'))]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('acrPullRoleId'))]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName')), '2023-01-31').principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName'))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))]"
      ]
    }
  ],
  "outputs": {
    "containerAppUrl": {
      "type": "string",
      "value": "[format('https://{0}', reference(resourceId('Microsoft.App/containerApps', parameters('containerAppName')), '2024-03-01').configuration.ingress.fqdn)]"
    },
    "containerRegistryName": {
      "type": "string",
      "value": "[parameters('containerRegistryName')]"
    },
    "containerRegistryLoginServer": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName')), '2023-07-01').loginServer]"
    },
    "managedIdentityPrincipalId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName')), '2023-01-31').principalId]"
    },
    "managedIdentityClientId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName')), '2023-01-31').clientId]"
    },
    "containerAppEnvironmentId": {
      "type": "string",
      "value": "[resourceId('Microsoft.App/managedEnvironments', variables('containerAppEnvName'))]"
    },
    "containerAppId": {
      "type": "string",
      "value": "[resourceId('Microsoft.App/containerApps', parameters('containerAppName'))]"
    },
    "resourceGroupName": {
      "type": "string",
      "value": "[resourceGroup().name]"
    },
    "postDeploymentInfo": {
      "type": "object",
      "value": {
        "containerRegistry": "[parameters('containerRegistryName')]",
        "containerApp": "[parameters('containerAppName')]",
        "managedIdentityPrincipalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName')), '2023-01-31').principalId]"
      }
    }
  }
}